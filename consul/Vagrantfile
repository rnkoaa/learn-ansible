# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  N = 3

  VAGRANT_VM_PROVIDER = "virtualbox"
  ANSIBLE_RAW_SSH_ARGS = []

  (1..N-1).each do |machine_id|
    ANSIBLE_RAW_SSH_ARGS << "-o IdentityFile=.vagrant/machines/consul-#{machine_id}/#{VAGRANT_VM_PROVIDER}/private_key"
  end

  (1..N).each do |machine_id|
    config.vm.define "consul-#{machine_id}" do |machine|
      machine.vm.box = "debian/stretch64"
      machine.vm.hostname = "consul-#{machine_id}"
      machine.vm.network "private_network", ip: "192.168.77.#{10+machine_id-1}"

      machine.vm.provision "shell", inline: <<-SHELL
        echo "export VAGRANT_DATA=/vagrant_data" >> /home/vagrant/.profile

        # Reload the bash_profile file so the environment variables
        # Are available to the current
        source /home/vagrant/.profile/.bash_profile

        # Add the workstation's public key as authorized
        # Allows the workstation to ssh into this node.
        VAGRANT_SSH_DIRECTORY="/home/vagrant/.ssh"
        if [ ! -d "$VAGRANT_SSH_DIRECTORY" ]; then
          # Control will enter here if $DIRECTORY doesn't exist.
          mkdir /home/vagrant/.ssh
        fi

        ROOT_SSH_DIRECTORY="/root/.ssh"
        if [ ! -d "$ROOT_SSH_DIRECTORY" ]; then
          # Control will enter here if $ROOT_SSH_DIRECTORY doesn't exist.
          mkdir /root/.ssh
        fi

         sudo apt-get update -y && sudo apt-get upgrade -y \
           && sudo apt-get -y install vim wget git zip unzip tree

         file="/home/vagrant/.vimrc"
         if [ -f "$file" ]
         then
             echo ".vimrc exists, will not download again."
         else
           wget -O /home/vagrant/.vimrc https://raw.githubusercontent.com/amix/vimrc/master/vimrcs/basic.vim
           # curl -O /home/vagrant/.vimrc https://raw.githubusercontent.com/amix/vimrc/master/vimrcs/basic.vim
         fi
      SHELL

      # Only execute once the Ansible provisioner,
      # when all the machines are up and ready.
      # if machine_id == N
        # machine.vm.provision :ansible do |ansible|
          # Disable default limit to connect to all the machines
          # ansible.limit = "all"
          # ansible.playbook = "main.yml"
          # ansible.inventory_path = "staging"
          # ansible.verbose = "-v"
          # ansible.raw_ssh_args = ANSIBLE_RAW_SSH_ARGS
        # end
      # end
    end
  end
end
